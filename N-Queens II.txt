Follow up for N-Queens problem.

Now, instead outputting board configurations, return the total number of distinct solutions.

-----------------

Version 1 的简化版 不需要画图什么的 只需要一个sum来记录总数就好。



public class Solution {
    private int sum = 0;
    
    public int totalNQueens(int n) {
        ArrayList<Integer> temp = new ArrayList<Integer>();
        search(temp, n);
        return sum;
    }
    
    private void search(ArrayList<Integer> temp, int n) {
        if (temp.size() == n) {
            sum ++;
            return;
        }
        for (int i = 0; i < n; i++) {
            if (!isValid(temp, i)) {
                continue;
            }
            temp.add(i);
            search(temp, n);
            temp.remove(temp.size() - 1);
        }
    }
    
    private boolean isValid(ArrayList<Integer> temp, int col) {
        int row = temp.size();
        for (int i = 0; i < row; i++) {
            if (temp.get(i) == col) {
                return false;
            }
            if (temp.get(i) - i == col - row) {
                return false;
            }
            if (temp.get(i) + i == col + row) {
                return false;
            }
        }
        return true;
    }
    
}