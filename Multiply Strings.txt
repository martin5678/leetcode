Given two numbers represented as strings, return multiplication of the numbers as a string.

Note: The numbers can be arbitrarily large and are non-negative.

----------------------------------------------

public class Solution {
    public String multiply(String num1, String num2) {
        if (num1 == null || num2 == null) {
            return null;
        }
        int total = num1.length() + num2.length();
        int[] num = new int[total];
        int carry;
        int product = 0;
        for (int i = num1.length() - 1; i >= 0; i--) {
            carry = 0;
            int j;
            for (j= num2.length() - 1; j >= 0; j--) {
                product = num[i + j + 1] + carry + 
                Character.getNumericValue(num1.charAt(i))
                * Character.getNumericValue(num2.charAt(j));
                carry = product / 10;
                num[i + j + 1] = product % 10;
            }
            num[i + j + 1] = carry;
        }
        StringBuilder sb = new StringBuilder();
        int i = 0;
        while (i < total - 1 && num[i] == 0) {
            i++;
        }
        while (i < total) {
            sb.append(num[i++]);
        }
        return sb.toString();
    }
}




------------------------
注意最后结果数组里面最后一个0 是不能删除的。

public class Solution {
    public String multiply(String num1, String num2) {
         if (num1.length() == 0 || num2.length() == 0) {
             return "";
         }
         int len1 = num1.length();
         int len2 = num2.length();
         int[] nums = new int[len1 + len2];
         int carry = 0;
         int product = 0;
         for (int i = len1 - 1; i >= 0; i--) {
             int j;
             carry = 0;
             for (j = len2 - 1; j >= 0; j--) {
                 product = nums[i + j + 1] + carry +
                    (num1.charAt(i) - '0') * (num2.charAt(j) - '0');
                nums[i + j + 1] = product % 10;
                carry = product / 10;
             }
             nums[i + j + 1] = carry;
         }
         int index;
         for (index = 0; index < nums.length - 1; index++) {
             if (nums[index] != 0) {
                 break;
             }
         }
         StringBuilder sb = new StringBuilder();
         for (int i = index; i < nums.length; i++) {
             sb.append(nums[i]);
         }
         return sb.toString();
    }
}
