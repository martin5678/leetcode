Given a binary tree, return the inorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},
   1
    \
     2
    /
   3
return [1,3,2].

--------------------------------

public class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> rs = new LinkedList<Integer>();
        Stack<TreeNode> st = new Stack<TreeNode>();
        TreeNode temp = root;
        while (temp != null || !st.empty()) {
            while (temp != null) {
                st.push(temp);
                temp = temp.left;
            }
            if (!st.empty()) {
                temp = st.pop();
                rs.add(temp.val);
                temp = temp.right;
            }
        }
        return rs;
    }
}