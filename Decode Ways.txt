A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given an encoded message containing digits, determine the total number of ways to decode it.

For example,
Given encoded message "12", it could be decoded as "AB" (1 2) or "L" (12).

The number of ways decoding "12" is 2.

------------------------

Fibonacci 变形， 注意处理当0 出现是的情况。

public class Solution {
    public int numDecodings(String s) {
        int len = s.length();
        if (len == 0 || s == null) {
            return 0;
        }
        if (s.charAt(0) == '0') {
            return 0;
        }
        int dp[] = new int[len + 1];
        dp[0] = 1;
        dp[1] = 1;
        for (int i = 2; i < len + 1; i++) {
            if (s.charAt(i - 1) != '0') {
                dp[i] = dp[i - 1];
            }
            int ten = (s.charAt(i - 2) - '0') * 10;
            int one = s.charAt(i - 1) - '0';
            if (ten + one <= 26 && ten + one >= 10) {
                dp[i] += dp[i - 2];
            }
        }
        return dp[len];
    }
}