Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

---------------------------------------------

Note: just notice the situation that the node only have one child.







/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int minDepth(TreeNode root) {
        if(root == null) return 0;
        if(root.right = =null && root.left == null) return 1;
        else if(root.right == null && root.left != null) return minDepth(root.left) + 1;
        else if(root.right != null&& root.left == null) return minDepth(root.right) + 1;
        else{
            return min(minDepth(root.left) + 1, minDepth(root.right) + 1);
        }
    }
    public int min(int a, int b) {
        return a >= b ? b : a;
    }
}