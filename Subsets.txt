Given a set of distinct integers, S, return all possible subsets.

Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
For example,
If S = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]


------------------------------------

public class Solution {
    public List<List<Integer>> subsets(int[] S) {
        Arrays.sort(S);
        List<List<Integer>> rs = new ArrayList<List<Integer>>();
        ArrayList<Integer> temp = new ArrayList<Integer>();
        if (S.length == 0 || S == null) {
            return rs;
        }
        helper(S, rs, temp, 0);
        return rs;
    }
    
    public void helper(int[] S, List<List<Integer>> rs, 
        ArrayList<Integer> temp, int pos) {
        rs.add(new ArrayList<Integer>(temp));
        for (int i = pos; i < S.length; i++) {
                temp.add(S[i]);
                helper(S, rs, temp, i + 1);
                temp.remove(temp.size() - 1);
        }
    }
}