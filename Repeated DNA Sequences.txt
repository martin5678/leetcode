All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.

Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

For example,

Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",

Return:
["AAAAACCCCC", "CCCCCAAAAA"].

========================


public class Solution {
    public List<String> findRepeatedDnaSequences(String s) {
        HashSet<Integer> single = new HashSet<>();
        HashSet<String> rs = new HashSet<>();
        HashMap<Character, Integer> map = new HashMap<>();
        map.put('A', 0);
        map.put('C', 1);
        map.put('G', 2);
        map.put('T', 3);
        for (int i = 0; i < s.length() - 9; i++) {
            int key = 0;
            for (int j = i; j < i + 10; j++) {
                key <<= 2;
                key |= map.get(s.charAt(j));
            }
            if (!single.add(key)) {
                rs.add(s.substring(i, i + 10));
            }
        }
        return new ArrayList<String>(rs);
    }
}
