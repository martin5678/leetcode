
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.



-------------------------------------

Note: (a[i] - sk.pop()  2) is based on the ascii code.


Solution:


public class Solution {
    public boolean isValid(String s) {
        Stack<Character> st = new Stack<Character>();
        int i = 0;
        while (i < s.length()) {
            if (isLeft(s.charAt(i))) {
                st.push(s.charAt(i));
            } else {
                if (st.size() == 0) {
                    return false;
                }
                char t = st.pop();
                int diff = s.charAt(i) - t;
                if (diff > 2) {
                    return false;
                }
            }
            i++;
        }
        if (st.size() > 0) {
            return false;
        }
        return true;
    }
    
    private boolean isLeft(char a) {
        return a == '{' || a == '(' || a == '[';
    }
}