Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.

----------------------------------------------

public class Solution {
    public int firstMissingPositive(int[] A) {
        if (A.length == 0) {
            return 1;
        }
        for (int index = 0; index < A.length; index++) {
            if (A[index] > A.length || A[index] < 1) {
                continue;
            }
            if (A[index] != index + 1) {
		// if equal do not swap or it will cause infinate loop
                if (A[A[index] - 1] == A[index]) {
                    continue;
                }
                int temp = A[A[index] - 1];
                A[A[index] - 1] = A[index]; 
                A[index] = temp;
                index--;
            }
        }
        for (int i = 0; i < A.length; i++) {
            if (A[i] != i + 1) {
                return i + 1;
            }
        }
        return A.length + 1;
    }
}