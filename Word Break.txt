一个DP问题。定义possible[i] 为S字符串上[0,i]的子串是否可以被segmented by dictionary.

那么

possible[i] = true      if  S[0,i]在dictionary里面

                = true      if   possible[k] == true 并且 S[k+1,j]在dictionary里面， 0<k<i

               = false      if    no such k exist.

 

---------------------------------------

public class Solution {
    public boolean wordBreak(String s, Set<String> dict) {
        if (dict.isEmpty()) {
            return false;
        }
        if (s.length() == 0) {
            return false;
        }
        boolean[] dp = new boolean[s.length()];
        dp[0] = dict.contains(s.substring(0, 1));
        for (int i = 0; i < s.length(); i++) {
            String sub = s.substring(0, i + 1);
            if (dict.contains(sub)) {
                dp[i] = true;
            }
            for (int j = 0; j < i; j++) {
                String str = s.substring(j + 1, i + 1);
                if (dp[j] == true && dict.contains(str)) {
                    dp[i] = true;
                }
            }
        }
        return dp[s.length() - 1];
    }
}