Given a 2D binary matrix filled with 0's and 1's, find the largest square containing all 1's and return its area.

For example, given the following matrix:

1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0
Return 4.

==================


public class Solution {
    public int maximalSquare(char[][] matrix) {
        if (matrix.length == 0) {
            return 0;
        }
        int[] dp = new int[matrix[0].length];
        int max = 0;
        
        for (int i = 0; i < matrix.length; i++) {
            int pre = 0;
            for (int j = 0; j < matrix[0].length; j++) {
                int temp = dp[j];
                if (matrix[i][j] == '1') {
                    if (j == 0) {
                        dp[j] = 1;
                    } else {
                        dp[j] = Math.min(dp[j - 1], Math.min(dp[j], pre)) + 1;
                    }
                } else {
                    dp[j] = 0;
                }
                max = Math.max(max, dp[j]);
                pre = temp;
            }
        }
        return max * max;
    }
}
