Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

For example,
Given [3,2,1,5,6,4] and k = 2, return 5.

Note: 
You may assume k is always valid, 1 ≤ k ≤ array's length.



===================


import java.util.Random;

public class Solution {
    public int findKthLargest(int[] nums, int k) {
        int left = 0;
        int right = nums.length - 1;
        k = nums.length - k;
        while (left <= right) {
            int index = partition(nums, left, right);
            if (index == k) {
                return nums[index];
            } else if (index > k) {
                right = index - 1;
            } else {
                left = index + 1;
            }
        }
        return -1;
    }
    
    public int partition(int[] nums, int left, int right) {
        Random rand = new Random();
        int pivot = rand.nextInt(right - left + 1) + left;
        swap(nums, pivot, right);
        int cur = left;
        for (int i = left; i < right; i++) {
            if (nums[i] < nums[right]) {
                swap(nums, i, cur++);
            }
        }
        swap(nums, cur, right);
        return cur;
    }
    
    public void swap(int[] nums, int first, int second) {
        int temp = nums[first];
        nums[first] = nums[second];
        nums[second] = temp;
    }
}
