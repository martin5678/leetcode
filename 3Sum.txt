Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)

-----------------------------

设前中后三个指针，注意三个指针分别要结果去重。

public class Solution {
    public List<List<Integer>> threeSum(int[] num) {
        List<List<Integer>> rs = new ArrayList<List<Integer>>();
        if (num.length == 0 || num == null) {
            return rs;
        }
        Arrays.sort(num);
        int n = num.length;
        for (int i = 0; i < n - 2; i++) {
            if (i != 0 && num[i] == num[i - 1]) {
                continue;
            }
            int left = i + 1;
            int right = n - 1;
            while (left < right) {
                int sum = num[i] + num[left] + num[right];
                if (sum == 0) {
                    ArrayList<Integer> temp = new ArrayList<Integer>();
                    temp.add(num[i]);
                    temp.add(num[left]);
                    temp.add(num[right]);
                    rs.add(temp);
                    right--;
                    left++;
                    while (left < right && num[right] == num[right + 1]) {
                        right--;
                    }
                    while (left < right && num[left] == num[left - 1]) {
                        left++;
                    }
                } else if (sum < 0){
                    left++;
                } else {
                    right--;
                }
            }
        }
        return rs;
    }
}