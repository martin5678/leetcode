Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

---------------------------------------------
Almost same as version I.



solution:

public class Solution {
    public ArrayList<Integer> getRow(int rowIndex) {
        ArrayList<Integer> rs = new ArrayList<Integer>();
        rs.add(1);
        if(rowIndex == 0) return rs;
        rs.add(1);
        if(rowIndex == 1) return rs;
        for(int i = 2; i <= rowIndex; i++){
            int old = 1;
            for(int j = 1; j <= i; j++){
                int t = 0;
                if(j == i) rs.add(1);
                else{
                    t += rs.get(j);
                    rs.set(j, rs.get(j) + old);
                    old = t;
                } 
            }
        }
        return rs;
		
    }
}