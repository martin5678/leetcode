

Given two strings S and T, determine if they are both one edit distance apart.


=============================

public class Solution {
    public boolean isOneEditDistance(String s, String t) {
        int lens = s.length();
        int lent = t.length();
        if (Math.abs(lens - lent) > 1 || s.equals(t)) {
            return false;
        }
        if (lens == lent) {
            int count = 0;
            for (int i = 0; i < lens; i++) {
                if (s.charAt(i) != t.charAt(i)) {
                    count++;
                }
                if (count > 1) {
                    return false;
                }
            }
            return true;
        }
        
        int indexs = lens - 1;
        int indext = lent - 1;
        int diff = 0;
        while (indexs >= 0 && indext >= 0) {
            if (s.charAt(indexs) == t.charAt(indext)) {
                indexs--;
                indext--;
            } else {
                if (lens > lent) {
                    indexs--;
                } else {
                    indext--;
                }
                diff++;
                if (diff > 1) {
                    return false;
                }
            }
        }
        return true;
    }
}


======================================

public class Solution {
    public boolean isOneEditDistance(String s, String t) {
        if (Math.abs(s.length() - t.length()) > 1 || s.equals(t)) {
            return false;
        }
        for (int i = 0; i < Math.min(s.length(), t.length()); i++) {
            if (s.charAt(i) != t.charAt(i)) {
                if (s.length() == t.length()) {
                    return s.substring(i + 1).equals(t.substring(i + 1));
                } else if (s.length() > t.length()) {
                    return s.substring(i + 1).equals(t.substring(i));
                } else {
                    return s.substring(i).equals(t.substring(i + 1));
                }
                
            }
        }
        return Math.abs(s.length() - t.length()) == 1;
    }
}
