There are N children standing in a line. Each child is assigned a rating value.

You are giving candies to these children subjected to the following requirements:

Each child must have at least one candy.
Children with a higher rating get more candies than their neighbors.
What is the minimum candies you must give?

-------------------------------------------
从左往右扫一遍，从右往左扫一遍，取大的加起来。

public class Solution {
    public int candy(int[] ratings) {
        int len = ratings.length;
        int[] candy = new int[len];
        Arrays.fill(candy, 1);
        int result = 0;
        for (int i = 0; i < len - 1; i++) {
            if (ratings[i + 1] > ratings[i]) {
                candy[i + 1] = candy[i] + 1;
            }
        }
        for (int i = len - 2; i >= 0; i--) {
            if (ratings[i + 1] < ratings[i] && candy[i] <= candy[i + 1]) {
                candy[i] = candy[i + 1] + 1;
            }
            result += candy[i];
        }
        result += candy[len - 1];
        return result;
    }    
}


===========================================

public class Solution {
    public int candy(int[] ratings) {
        int len = ratings.length;
        if (len == 0) {
            return 0;
        }
        int[] left = new int[len];
        Arrays.fill(left, 1);
        for (int i = 1; i < len; i++) {
            if (ratings[i] > ratings[i - 1]) {
                left[i] = left[i - 1] + 1;
            }
        }
        int[] right = new int[len];
        Arrays.fill(right, 1);
        int result = 0;
        for (int i = len - 2; i >= 0; i--) {
            if (ratings[i] > ratings[i + 1]) {
                right[i] = right[i + 1] + 1;
            }
            result += Math.max(left[i], right[i]);
        }
        return result + Math.max(left[len - 1], right[len - 1]);
    }
}