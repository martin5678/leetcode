You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Follow up:
Could you do this in-place?

----------------------------
简单的方法先复制到另外一个矩阵然后复制回来，O（n^2）空间。

public class Solution {
    public void rotate(int[][] matrix) {
        if (matrix.length <= 1) {
            return;
        }
        int[][] temp = new int[matrix.length][matrix.length];
        int len = matrix.length;
        for (int i = 0; i < len; i++) {
            for (int j = 0; j < len; j++) {
                temp[i][j] = matrix[len - 1 - j][i];
            }
        }
        for (int i = 0; i < len; i++) {
            for (int j = 0; j < len; j++) {
                matrix[i][j] = temp[i][j];
            }
        }
    }
}


好的方法直接in-place : 按层来交换上下左右4个元素。


 1   2   3  | 4
 ---------- |
 5 | 6   7  | 8
 9 | 10  11 | 12
   | ----------
 13| 14  15  16


public class Solution {
    public void rotate(int[][] matrix) {
        if (matrix.length <= 1) {
            return;
        }
        int len = matrix.length;
        for (int i = 0; i < len / 2; i++) {
            for (int j = i; j < len - 1 - i; j++) {
                // save top
                int temp = matrix[i][j];
                // left to top
                matrix[i][j] = matrix[len - 1 - j][i];
                // bottom to left
                matrix[len - 1 - j][i] = matrix[len - 1 - i][len - 1 - j];
                // right to bottom
                matrix[len - 1 - i][len - 1 - j] = matrix[j][len - 1 - i];
                // top to right
                matrix[j][len - 1 - i] = temp;
            }
        }
    }
}



